summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
#    lineout_throw_lost_free_kick = sum(lineout_throw_lost_free_kick),
#    lineout_throw_lost_handling_error = sum(lineout_throw_lost_handling_error),
#    lineout_throw_lost_not_straight = sum(lineout_throw_lost_not_straight),
#    lineout_throw_lost_outright = sum(lineout_throw_lost_outright),
#    lineout_throw_lost_penalty = sum(lineout_throw_lost_penalty),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(win_percentage))
grid.table(lineouts_by_team)
lineouts_stolen <- tournament_data %>%
group_by(team, opposition, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal))
pdf('docs/lineouts.pdf')
grid.table(lineouts_by_team)
dev.off()
source('common.R')
metric_names = sort(names(tournament_data))
metric_names[grep('lineout', metric_names)]
lineouts_by_team <- tournament_data %>%
group_by(team) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(win_percentage))
grid.table(lineouts_by_team)
lineouts_stolen <- tournament_data %>%
group_by(team, opposition, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal))
pdf('docs/lineouts.pdf')
grid.table(lineouts_by_team)
dev.off()
source('common.R')
metric_names = sort(names(tournament_data))
metric_names[grep('lineout', metric_names)]
lineouts_by_team <- tournament_data %>%
group_by(team) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(win_percentage))
grid.table(lineouts_by_team)
lineouts_stolen <- tournament_data %>%
group_by(team, opposition, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal))
pdf('docs/lineouts.pdf')
grid.table(lineouts_by_team)
grid.table(lineouts_stolen)
dev.off()
lineouts_stolen <- tournament_data %>%
group_by(team, opposition, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal))
View(lineouts_stolen)
lineouts_stolen <- tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal))
lineouts_stolen <- tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
top_n(10)
View(lineouts_stolen)
lineouts_stolen <- tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
top_n(10, lineout_won_steal)
View(lineouts_stolen)
lineouts_stolen <- tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal)) %>%
top_n(10, lineout_won_steal)
lineouts_stolen <- tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal)) %>%
top_n(n = 10, lineout_won_steal)
lineouts_stolen2 <- tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal)) %>%
top_n(n = 10, lineout_won_steal)
lineouts_stolen <- tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal)) %>%
top_n(n = 10, lineout_won_steal)
top_n(lineouts_stolen, n = 10, lineout_won_steal)
source('common.R')
metric_names = sort(names(tournament_data))
metric_names[grep('lineout', metric_names)]
lineouts_by_team <- tournament_data %>%
group_by(team) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(win_percentage))
grid.table(lineouts_by_team)
lineouts_stolen <- tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal))
top_n(lineouts_stolen, n = 10, lineout_won_steal)
pdf('docs/lineouts.pdf')
grid.table(lineouts_by_team)
grid.table(top_n(lineouts_stolen, n = 10, lineout_won_steal))
dev.off()
top_n(lineouts_stolen, n = 15, lineout_won_steal)
top_n(lineouts_stolen, n = 5, lineout_won_steal)
top_n(lineouts_stolen, 5, lineout_won_steal)
top_n(lineouts_stolen, 1, lineout_won_steal)
lineouts_stolen <- tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal)) %>%
top_n(1, lineout_won_steal)
View(lineouts_stolen)
library(rmarkdown)
---
title: "Six Nations 2017 - Lineout Analysis"
author: "Wal McConnell"
date: "20 March 2017"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Lineouts
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
source('../lineouts.R')
source('R/lineouts.R')
ireland_lineouts_lost_by_opposition <- tournament_data %>%
select(team == 'Ireland') %>%
group_by(team, opposition) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(lineouts_lost)) %>%
top_n(1, wt = lineouts_lost)
metric_names[grep('lineout', metric_names)]
ireland_lineouts_lost_by_opposition <- tournament_data %>%
select(team == 'Ireland') %>%
group_by(team, opposition) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(lineouts_lost)) %>%
top_n(1, wt = lineouts_lost)
ireland_lineouts_lost_by_opposition <- tournament_data %>%
filter(team == 'Ireland') %>%
group_by(team, opposition) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(lineouts_lost)) %>%
top_n(1, wt = lineouts_lost)
View(ireland_lineouts_lost_by_opposition)
ireland_lineouts_lost_by_opposition <- tournament_data %>%
filter(team == 'Ireland') %>%
group_by(team, opposition) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(lineouts_lost))
View(ireland_lineouts_lost_by_opposition)
metric_names[grep('lineout', metric_names)]
tournament_data %>%
filter(team == 'Ireland') %>%
group_by(team, opposition, player_name) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(lineouts_lost))
metric_names[grep('lineout', metric_names)]
ireland_lineout_success <- tournament_data %>%
filter(team == 'Ireland') %>%
group_by(team, opposition) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(lineouts_lost))
ireland_lineout_success <- tournament_data %>%
filter(team == 'Ireland') %>%
group_by(team, player_name) %>%
summarise(
lineout_success = sum(lineout_success)
)
View(ireland_lineout_success)
ireland_lineout_success <- tournament_data %>%
filter(team == 'Ireland') %>%
group_by(team, player_name) %>%
summarise(
lineout_success = mean(lineout_success)
)
View(ireland_lineout_success)
ireland_lineout_success <- tournament_data %>%
filter(team == 'Ireland') %>%
group_by(team, opposition, player_name) %>%
summarise(
lineout_success = mean(lineout_success)
View(ireland_lineout_success)
tournament_data %>%
filter(team == 'Ireland') %>%
group_by(team, opposition, player_name) %>%
summarise(
lineout_success = mean(lineout_success)
)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name) %>%
summarise(
lineout_success = mean(lineout_success)
)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0, player_name 'Best, Rory')
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0, player_name == 'Best, Rory')
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0, player_name == 'Best, Rory')$lineout_success
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0, player_name == 'Best, Rory')['lineout_success']
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name)
summarise(
lineout_success = mean(lineout_success)
)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name)
summarise(
lineout_success = mean(lineout_success)
)
metric_names[grep('lineout', metric_names)]
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name)
summarise(
lineout_success = mean(lineout_success)
)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name) %>%
summarise(
lineout_success = mean(lineout_success)
)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = mean(lineout_success)
)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100), 1)
)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1)
)
metric_names[grep('lineout', metric_names)]
tournament_data %>%
filter(opposition = 'Ireland', lineout_won_steal > 0) %>%
group_by(team) %>%
summarise(lineouts_stolen = sum(lineout_won_steal))
opposition_won_ireland_lineouts <- tournament_data %>%
filter(opposition == 'Ireland', lineout_won_steal > 0) %>%
group_by(team) %>%
summarise(lineouts_stolen = sum(lineout_won_steal))
View(opposition_won_ireland_lineouts)
tournament_data %>%
filter(opposition == 'Ireland', lineout_won_steal > 0) %>%
group_by(team, player_name) %>%
summarise(lineouts_stolen = sum(lineout_won_steal))
metric_names[grep('lineout', metric_names)]
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1)
)
metric_names[grep('lineout', metric_names)]
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1),
lineout_throw_lost_outright = sum(lineout_throw_lost_outright)
)
metric_names[grep('lineout', metric_names)]
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1),
lineout_throw_lost_outright = sum(lineout_throw_lost_outright),
lineout_throw_lost_handling_error = sum(lineout_throw_lost_handling_error),
lineout_throw_lost_free_kick = sum(lineout_throw_lost_free_kick),
lineout_throw_lost_not_straight = sum(lineout_throw_lost_not_straight),
lineout_throw_lost_penalty = sum(lineout_throw_lost_penalty)
)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1),
lineout_throw_lost_outright = sum(lineout_throw_lost_outright),
lineout_throw_lost_handling_error = sum(lineout_throw_lost_handling_error),
lineout_throw_lost_free_kick = sum(lineout_throw_lost_free_kick),
lineout_throw_lost_not_straight = sum(lineout_throw_lost_not_straight),
lineout_throw_lost_penalty = sum(lineout_throw_lost_penalty)
)
tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1),
lineout_throw_lost_outright = sum(lineout_throw_lost_outright),
lineout_throw_lost_handling_error = sum(lineout_throw_lost_handling_error),
lineout_throw_lost_free_kick = sum(lineout_throw_lost_free_kick),
lineout_throw_lost_not_straight = sum(lineout_throw_lost_not_straight),
lineout_throw_lost_penalty = sum(lineout_throw_lost_penalty)
)
ireland_lineout_success_by_player <- tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1),
lineout_throw_lost_outright = sum(lineout_throw_lost_outright),
lineout_throw_lost_handling_error = sum(lineout_throw_lost_handling_error),
lineout_throw_lost_free_kick = sum(lineout_throw_lost_free_kick),
lineout_throw_lost_not_straight = sum(lineout_throw_lost_not_straight),
lineout_throw_lost_penalty = sum(lineout_throw_lost_penalty)
)
View(ireland_lineout_success_by_player)
ireland_lineout_success_by_player <- tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1),
lineout_throw_lost_outright = sum(lineout_throw_lost_outright),
lineout_throw_lost_handling_error = sum(lineout_throw_lost_handling_error),
lineout_throw_lost_not_straight = sum(lineout_throw_lost_not_straight)
)
ireland_lineout_success_by_player <- tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1),
lineout_throw_lost_outright = sum(lineout_throw_lost_outright),
lineout_throw_lost_handling_error = sum(lineout_throw_lost_handling_error),
lineout_throw_lost_not_straight = sum(lineout_throw_lost_not_straight)
)
ireland_lineout_success_by_player <- tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name) %>%
summarise(
lineout_success = round(mean(lineout_success) * 100, 1),
lineout_throw_lost_outright = sum(lineout_throw_lost_outright),
lineout_throw_lost_handling_error = sum(lineout_throw_lost_handling_error),
lineout_throw_lost_not_straight = sum(lineout_throw_lost_not_straight)
) %>% filter(lineout_success < 100)
ireland_lineout_success_by_player <- tournament_data %>%
filter(team == 'Ireland', lineout_success > 0) %>%
group_by(team, opposition, player_name) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineout_success = round(mean(lineout_success) * 100, 1),
lineout_throw_lost_outright = sum(lineout_throw_lost_outright),
lineout_throw_lost_handling_error = sum(lineout_throw_lost_handling_error),
lineout_throw_lost_not_straight = sum(lineout_throw_lost_not_straight)
) %>% filter(lineout_success < 100)
tournament_data %>%
filter(lineout_won_steal > 0) %>%
group_by(team, player_name) %>%
summarise(lineouts_stolen = sum(lineout_won_steal))
tournament_data %>%
filter(opposition == 'Ireland', lineout_won_steal > 0) %>%
group_by(team, player_name) %>%
summarise(lineouts_stolen = sum(lineout_won_steal))
tournament_data %>%
filter(team == 'Ireland', lineout_won_steal > 0) %>%
group_by(team, player_name) %>%
summarise(lineouts_stolen = sum(lineout_won_steal))
tournament_data %>%
filter(team == 'Ireland', lineout_won_steal > 0) %>%
group_by(team, opposition, player_name) %>%
summarise(lineouts_stolen = sum(lineout_won_steal))
metric_names[grep('lineout', metric_names)]
tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal))
lineouts_stolen <- tournament_data %>%
group_by(team) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal)) %>%
top_n(1, lineout_won_steal)
tournament_data %>%
group_by(team) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal)) %>%
top_n(1, lineout_won_steal)
tournament_data %>%
group_by(team) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal))
tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal))
tournament_data %>%
group_by(team, player_name) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal)) %>%
filter(lineout_won_steal > 0)
metric_names[grep('lineout', metric_names)]
tournament_data %>%
group_by(player_name) %>%
summarise(
lineout_throw_won_clean = sum(lineout_throw_won_clean),
lineout_throw_won_tap = sum(lineout_throw_won_tap),
lineout_throw_won_penalty = sum(lineout_throw_won_penalty),
lineout_throw_lost_penalty = sum(lineout_throw_lost_penalty)
)
tournament_data %>%
group_by(player_name) %>%
summarise(
lineout_throw_won_clean = sum(lineout_throw_won_clean),
lineout_throw_won_tap = sum(lineout_throw_won_tap),
lineout_throw_won_penalty = sum(lineout_throw_won_penalty),
lineout_throw_lost_penalty = sum(lineout_throw_lost_penalty),
something = (lineout_throw_won_clean +lineout_throw_won_tap + lineout_throw_won_penalty + lineout_throw_lost_penalty)
) %>% filter()
tournament_data %>%
group_by(player_name) %>%
summarise(
lineout_throw_won_clean = sum(lineout_throw_won_clean),
lineout_throw_won_tap = sum(lineout_throw_won_tap),
lineout_throw_won_penalty = sum(lineout_throw_won_penalty),
lineout_throw_lost_penalty = sum(lineout_throw_lost_penalty),
something = (lineout_throw_won_clean +lineout_throw_won_tap + lineout_throw_won_penalty + lineout_throw_lost_penalty)
) %>% filter(something > 0)
tournament_data %>%
group_by(player_name) %>%
summarise(
lineout_throw_won_tap = sum(lineout_throw_won_tap),
lineout_throw_won_penalty = sum(lineout_throw_won_penalty),
lineout_throw_lost_penalty = sum(lineout_throw_lost_penalty),
something = (lineout_throw_won_tap + lineout_throw_won_penalty + lineout_throw_lost_penalty)
) %>% filter(something > 0)
library(tidyverse)
library(rmarkdown)
library(knitr)
tournament_data = read.csv(file = '../../data/tournament.csv')
tournament_data <- tournament_data %>% separate(position, c('position_type', 'position_numnber'))
kable(lineouts_stolen, caption = "Lineout Stolen", col.names = c('Team', 'Opposition', 'Player', 'Lineouts Stolen'))
metric_names[grep('lineout', metric_names)]
lineouts_stolen_against <- tournament_data %>%
group_by(opposition) %>%
summarise(lineout_won_steal = sum(lineout_won_steal)) %>%
arrange(desc(lineout_won_steal)) %>%
filter(lineout_won_steal > 0)
View(lineouts_stolen2)
View(lineouts_stolen_against)
tournament_data %>%
group_by(team, opposition) %>%
summarise(
total_lineouts = sum(total_lineouts),
lineouts_won = sum(lineouts_won),
lineouts_lost = sum(lineouts_lost),
win_percentage = round(lineouts_won/total_lineouts * 100, 1)
) %>% arrange(desc(win_percentage))
